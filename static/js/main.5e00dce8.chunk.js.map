{"version":3,"sources":["components/DrumPad.tsx","utils/playSoundElement.ts","components/DrumMachine.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DrumPad","props","key","pad","Button","onClick","parentCallback","variant","size","block","id","src","instrument","className","playSoundElement","document","getElementById","play","padsArr","display","soundPiano","soundDrum","DrumMachine","getDisplyDataCallback","data","setState","changeInstrument","state","keyPressed","event","toUpperCase","map","p","includes","pads","Card","Container","Row","Col","sm","this","span","offset","substr","onKeyDown","element","i","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5e00dce8.chunk.js","sourcesContent":["import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport {DrumPadProps} from '../types/DrumPadProps'\n\nexport const DrumPad = (props: DrumPadProps) => {\n    const key = props.pad.key;\n    return <div>\n        <Button onClick={() => props.parentCallback(key)} variant=\"outline-info\" size=\"lg\" block>\n            {key}\n            <audio id={key} src={props.pad[props.instrument]}  className='clip'/>\n        </Button>\n    </div>\n}"," const playSoundElement = (id: string) => {\n    const el: any = document.getElementById(id);\n    el.play();\n}\n\nexport default playSoundElement;","import React from \"react\";\nimport { Pad } from \"../types/Pad\";\nimport { DrumPad } from \"./DrumPad\";\nimport playSoundElement from '../utils/playSoundElement';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\ninterface IDrumMachineProps { }\n\ninterface IDrumMachineState {\n  pads: Pad[],\n  display: string,\n  instrument: string\n}\n\nconst padsArr: Pad[] = [\n  { key: 'Q', display: 'Q is pressed', soundPiano: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3', soundDrum: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3' },\n  { key: 'W', display: 'Chord-2', soundPiano: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3', soundDrum: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3' },\n  { key: 'E', display: 'Chord-3', soundPiano: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3', soundDrum: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3' },\n  { key: 'A', display: 'Shaker', soundPiano: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3', soundDrum: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3' },\n  { key: 'S', display: 'Open-HH', soundPiano: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3', soundDrum: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3' },\n  { key: 'D', display: 'Closed-HH', soundPiano: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3', soundDrum: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3' },\n  { key: 'Z', display: 'Punchy-Kick', soundPiano: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3', soundDrum: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3' },\n  { key: 'X', display: 'Side-Stick', soundPiano: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3', soundDrum: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3' },\n  { key: 'C', display: 'Snare', soundPiano: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3', soundDrum: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3' }];\n\nexport class DrumMachine extends React.Component<IDrumMachineProps, IDrumMachineState> {\n  constructor(props: IDrumMachineProps) {\n    super(props);\n    this.state = { pads: padsArr, display: '###', instrument: 'soundDrum' };\n  }\n\n  getDisplyDataCallback = (data: string) => {\n    this.setState({\n      display: data\n    });\n    playSoundElement(data);\n  }\n\n  changeInstrument = () => {\n    this.setState({\n      instrument: this.state.instrument === 'soundDrum' ? 'soundPiano' : 'soundDrum'\n    });\n  }\n\n  keyPressed = (event: any) => {\n    const key = event.key.toUpperCase();\n    if (padsArr.map(p => p.key).includes(key)) {\n      this.getDisplyDataCallback(key);\n    }\n  }\n\n  render() {\n    return (\n      <Card >\n      <Container className=\" mt-4 mb-4\">\n        <Row className=\"justify-content-md-center\">\n          <Col sm={3}>\n            <p id='display'>\n              {this.state.display}\n            </p>\n          </Col>\n          <Col sm={{ span: 1, offset: 3 }}>\n            <Button onClick={this.changeInstrument} variant=\"light\">{this.state.instrument.substr(5)}</Button>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <div id='drum-machine' onKeyDown={this.keyPressed}>\n            <Col sm={12}>\n              <Container className='mt-2'>\n                <Row>\n                  {\n                    this.state.pads.map((element, i) => {\n                      return (\n                        <Col sm={4} className=\"mt-2\">\n                          <div className='drum-pad' id={element.key + i}>\n                            <DrumPad key={element.key}\n                              pad={element}\n                              parentCallback={this.getDisplyDataCallback}\n                              instrument={this.state.instrument} />\n                          </div>\n                        </Col>\n                      );\n                    })\n                  }\n                </Row>\n              </Container>\n            </Col>\n          </div>\n        </Row>\n      </Container>\n      </Card>\n    )\n  }\n}","import React from 'react';\nimport './App.css';\nimport { DrumMachine } from './components/DrumMachine';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction App() {\n  return (\n    <div className=\" d-flex align-items-center min-vh-100\">\n        <Container>\n      <Row className=\"justify-content-md-center\">\n      <Col sm={2}></Col>\n      <Col sm={8}>\n      <DrumMachine />\n      </Col>\n      <Col  sm={2}></Col>\n      </Row>\n    </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}